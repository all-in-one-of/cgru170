// Copyright (C) 1997-2011 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
// Creation Date:  28 June 1996
//
//
//  Procedure Name:
//      buildObjectMenuItemsNow
//
//  Description:
//      This procedure is called from ModelEdMenu as a postMenuCommand.
//
//  Input Arguments:
//      The parent item to parent the popup menu to.
//
//  Return Value:
//      None.
//


global proc buildObjectMenuItemsNow( string $parentName)
{
	global int $gIsMarkingMenuOn;

	if (`popupMenu -e -exists $parentName`) {
		popupMenu -e -deleteAllItems $parentName;	
		if (`popupMenu -q -mm $parentName` != $gIsMarkingMenuOn) {
			popupMenu -e -mm $gIsMarkingMenuOn $parentName;
		}
		if (!`dagObjectHit -mn $parentName`) {
			string $leadObject[] = `ls -sl -tail 1 -typ transform -typ shape`;
			if (size($leadObject) > 0) {
				dagMenuProc($parentName, $leadObject[0]);
			} else {
				setParent -menu $parentName;

                  menuItem
               -label "Unselect All"
               -radialPosition "N"
               -command ("setSelectMode(\"objects\", \"Objects\"); select -cl;");
                  menuItem
               -label "Toggle Click Drag"
               -radialPosition "NE"
               -checkBox `selectPref -q -cld`
               -command ("{if(`selectPref -q -cld`){selectPref -clickDrag 0; cgruInfo \"clickDrag Select OFF\";} else {selectPref -clickDrag 1; cgruInfo \"clickDrag Select ON\";}}");
                  menuItem
               -label "Clear Selection"
               -radialPosition "E"
               -command ("select -cl;");
            menuItem
               -label "Custom NURBS Display Options"
               -radialPosition "SE"
               -command ("CustomNURBSComponentsOptions;");
            menuItem
               -label "Toggle Object/Components"
               -radialPosition "S"
               -command ("SelectToggleMode;");
            menuItem
               -label "Custom Polygon Display Options"
               -radialPosition "SW"
               -command ("CustomPolygonDisplayOptions;");
                  menuItem
               -label "Whole Face Sensitive (polygons)"
               -radialPosition "W"
               -checkBox `polySelectConstraint -q -wholeSensitive`
               -command ("if(`polySelectConstraint -q -wholeSensitive`) polySelectConstraint -wholeSensitive 0; else polySelectConstraint -wholeSensitive 1");
                  menuItem
               -label "Toggle BackFace (polygons)"
               -radialPosition "NW"
               -command ("tima_toggleBackFace_globalProc;");
//          ########
                  menuItem
               -label "Create quickSelectionSet"
               -command ("sets -n \"quickSelectionSet\";");
            string $quickSelectionSetsArray[] = `ls -sets "quickSelectionSet*"`;
            string $set;
                  menuItem -label "Select quickSelectionSet" -sm 1;
            for( $set in $quickSelectionSetsArray)
                     menuItem -label $set -ecr 0 -c ("select " + $set);
            setParent -m ..;
                     setParent ..;
			}
		}
	} else {
		warning (uiRes("m_buildObjectMenuItemsNow.kParentWarn"));
	}
}
