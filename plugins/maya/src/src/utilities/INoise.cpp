#include "INoise.h"

double INoise::fade(double t) { return t * t * t * (t * (t * 6 - 15) + 10); }
double INoise::lerp(double t, double a, double b) { return a + t * (b - a); }
double INoise::grad(int hash, double x, double y, double z, double w) {
      int h = hash & 31; // CONVERT LO 5 BITS OF HASH TO 32 GRAD DIRECTIONS.
      double a=y,b=z,c=w;            // X,Y,Z
      switch (h >> 3) {          // OR, DEPENDING ON HIGH ORDER 2 BITS:
		case 1: a=w;b=x;c=y;break;     // W,X,Y
		case 2: a=z;b=w;c=x;break;     // Z,W,X
		case 3: a=y;b=z;c=w;break;     // Y,Z,W
      }
      return ((h&4)==0 ? -a:a) + ((h&2)==0 ? -b:b) + ((h&1)==0 ? -c:c);
}

double INoise::atPointAndTime(double x, double y, double z, double w, int *p)
{
	int X = (int)floor(x) & 255;                  // FIND UNIT CUBE THAT
	int Y = (int)floor(y) & 255;                  // CONTAINS POINT.
	int Z = (int)floor(z) & 255;
	int W = (int)floor(w) & 255;
	x -= floor(x);                                // FIND RELATIVE X,Y,Z
	y -= floor(y);                                // OF POINT IN CUBE.
	z -= floor(z);
	w -= floor(w);
	double a = fade(x);                                // COMPUTE FADE CURVES
	double b = fade(y);                                // FOR EACH OF X,Y,Z.
	double c = fade(z);
	double d = fade(w);
	int A, B, AAA, AAB, ABA, ABB, BAA, BAB, BBA, BBB, AB, AA, BA, BB;
		A = p[X  ]+Y, AA = p[A]+Z, AB = p[A+1]+Z,      // HASH COORDINATES OF
		B = p[X+1]+Y, BA = p[B]+Z, BB = p[B+1]+Z,      // THE 16 CORNERS OF
		AAA = p[AA]+W, AAB = p[AA+1]+W,                // THE HYPERCUBE.
		ABA = p[AB]+W, ABB = p[AB+1]+W,
		BAA = p[BA]+W, BAB = p[BA+1]+W,
		BBA = p[BB]+W, BBB = p[BB+1]+W;

      return lerp(d,                                     // INTERPOLATE DOWN.
          lerp(c,lerp(b,lerp(a,grad(p[AAA  ], x  , y  , z  , w), 
                               grad(p[BAA  ], x-1, y  , z  , w)),
                        lerp(a,grad(p[ABA  ], x  , y-1, z  , w), 
                               grad(p[BBA  ], x-1, y-1, z  , w))),

                 lerp(b,lerp(a,grad(p[AAB  ], x  , y  , z-1, w), 
                               grad(p[BAB  ], x-1, y  , z-1, w)),
                        lerp(a,grad(p[ABB  ], x  , y-1, z-1, w),
                               grad(p[BBB  ], x-1, y-1, z-1, w)))),

          lerp(c,lerp(b,lerp(a,grad(p[AAA+1], x  , y  , z  , w-1), 
                               grad(p[BAA+1], x-1, y  , z  , w-1)),
                        lerp(a,grad(p[ABA+1], x  , y-1, z  , w-1), 
                               grad(p[BBA+1], x-1, y-1, z  , w-1))),

                 lerp(b,lerp(a,grad(p[AAB+1], x  , y  , z-1, w-1), 
                               grad(p[BAB+1], x-1, y  , z-1, w-1)),
                        lerp(a,grad(p[ABB+1], x  , y-1, z-1, w-1),
                               grad(p[BBB+1], x-1, y-1, z-1, w-1)))));
 }

vector INoise::noise4d_v( double x, double y, double z, double t)
{
	vector noisePnt;
	noisePnt.x = atPointAndTime( x, y, z, t, p_x);
	noisePnt.y = atPointAndTime( x, y, z, t, p_y);
	noisePnt.z = atPointAndTime( x, y, z, t, p_z);
	return noisePnt;
}

int INoise::p_x[512] = { 151,160,137,91,90,15,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
   88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
   77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
   102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
   135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
   5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
   223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
   129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
   251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
   49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180
   ,
   151,160,137,91,90,15,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
   88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
   77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
   102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
   135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
   5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
   223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
   129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
   251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
   49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180
};
int INoise::p_y[512] = { 44,70,221,153,101,155,167, 43,172,9,
   135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
   102,143,54, 65,25,63,161, 1,216,74,165,71,134,139,48,27,166,35,11,32,57,
   129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
   49,192,214, 31,181,199,106,157,184, 84,204,75,0,26,197,62,94,252,219,203,117,
   223,183,170,213,119,248,152, 2,154,80,73,209,151,160,137,91,90,15,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   77,146,158,231,83,111,229,122,60,211,115,121,50,45,127, 4,150,254,177,33,
   251,34,242,193,238,210,144,12,191,179,133,230,220,105,92,41,55,46,245,40,244,
   190, 6,148,247,120,234,168, 68,175,163, 76,132,187,208, 89,18,169,200,196,
   88,237,149,56,87,174,20,125,136,171,176,162,241, 81,51,145,235,249,14,239,107,
   5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42
   ,
   44,70,221,153,101,155,167, 43,172,9,
   135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
   102,143,54, 65,25,63,161, 1,216,74,165,71,134,139,48,27,166,35,11,32,57,
   129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
   49,192,214, 31,181,199,106,157,184, 84,204,75,0,26,197,62,94,252,219,203,117,
   223,183,170,213,119,248,152, 2,154,80,73,209,151,160,137,91,90,15,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   77,146,158,231,83,111,229,122,60,211,115,121,50,45,127, 4,150,254,177,33,
   251,34,242,193,238,210,144,12,191,179,133,230,220,105,92,41,55,46,245,40,244,
   190, 6,148,247,120,234,168, 68,175,163, 76,132,187,208, 89,18,169,200,196,
   88,237,149,56,87,174,20,125,136,171,176,162,241, 81,51,145,235,249,14,239,107,
   5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42
};
int INoise::p_z[512] = { 211,133,230,220,105,92,41,55,46,245,40,244,
   251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
   88,237,149,56,87,174,20,125,136,171,168,163, 70,252,219,203,117,35,11,32,57,177,33,
    129,22,39,253, 19,98,108,110,79,68,175,74,165,71,134,139,48,27,166,
   102,143,54, 65,25,63,161, 1,216,80,151,160,137,91,90,15,
  135,130,116,188,159,86,164,100,109,113,224,232,178,185, 112,104,218,246,97,228,
   77,146,158,231,83,111,229,122,60,73,209,76,221,153,101,155,167, 43,172,9,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
   5,202,38,147,118,126,255,82,85,212,207, 206,59,227,47,16,58,17,182,189,28,42,
   198,173,186, 3,64,52,217,226,250,124,123,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
   190, 6,148,247,120,234,75,0,26,197,62,94,132,187,208, 89,18,169,200,196,
   223,183,170,213,119,248,152, 2,44,154
   ,
   211,133,230,220,105,92,41,55,46,245,40,244,
   251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
   88,237,149,56,87,174,20,125,136,171,168,163, 70,252,219,203,117,35,11,32,57,177,33,
    129,22,39,253, 19,98,108,110,79,68,175,74,165,71,134,139,48,27,166,
   102,143,54, 65,25,63,161, 1,216,80,151,160,137,91,90,15,
  135,130,116,188,159,86,164,100,109,113,224,232,178,185, 112,104,218,246,97,228,
   77,146,158,231,83,111,229,122,60,73,209,76,221,153,101,155,167, 43,172,9,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
   5,202,38,147,118,126,255,82,85,212,207, 206,59,227,47,16,58,17,182,189,28,42,
   198,173,186, 3,64,52,217,226,250,124,123,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
   190, 6,148,247,120,234,75,0,26,197,62,94,132,187,208, 89,18,169,200,196,
   223,183,170,213,119,248,152, 2,44,154
};
